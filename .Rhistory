knitr::opts_chunk$set(echo = TRUE)
Multidata <- read_dta("https://stats.idre.ucla.edu/stat/examples/imm/imm23.dta")
library(tidyverse)
library(gridExtra)
library(haven)
library(lme4)
Multidata <- read_dta("https://stats.idre.ucla.edu/stat/examples/imm/imm23.dta")
model1 <- lmer(math ~ homework + (1+homework|schid), REML = F, data = Multidata)
summary(model1)
coef(model1)
model2 <- lmer(math ~ homework + public + public:homework + (1+homework + public|schid), REML = F, data = Multidata)
summary(model2)
coef(model2)
model2.reduced <- lmer(math ~ homework + public + (1 + homework|schid), REML = F, data = Multidata)
summary(model2.reduced)
coef(model2.reduced)
# Both models need same variance structure to use a drop-in-deviance test
# We add the variance term associated with public in order to account for this
model2.reducedI <- lmer(math ~ homework + public + (1 + homework + public|schid), REML = F, data = Multidata)
# Drop-in-deviance
anova(model1, model2.reducedI, test = "Chisq")
# The code may generate a warning due to the complexity of the models being compared
anova(model1, model2.reduced)
# We will perfom a goodness of fit test for Model2.reducedI
ts <- sum(residucals(model2.reducedI, type = "pearson")^2)
# We will perfom a goodness of fit test for Model2.reducedI
ts <- sum(residuals(model2.reducedI, type = "pearson")^2)
df <- model2.reducedI$df.residual
df <- model2.reduced$df.residual
# We will perfom a goodness of fit test for Model2.reducedI
ts <- sum(residuals(model2.reducedI, type = "pearson")^2)
df <- model2_reducedI$df.residual
model2_reducedI <- lmer(math ~ homework + public + (1 + homework + public|schid), REML = F, data = Multidata)
# We will perfom a goodness of fit test for Model2.reducedI
ts <- sum(residuals(model2.reducedI, type = "pearson")^2)
df <- model2_reducedI$df.residual
